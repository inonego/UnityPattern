using System;

namespace inonego
{
    public interface IJumper
    {

    #region 필드

        // ------------------------------------------------------------
        /// <summary>
        /// 이벤트를 호출할지 여부를 결정합니다.
        /// </summary>
        // ------------------------------------------------------------
        public bool InvokeEvent { get; set; }

        // ------------------------------------------------------------
        /// <summary>
        /// 최대 점프 횟수입니다.
        /// </summary>
        // ------------------------------------------------------------
        public int MaxCount { get; set; }

        // ------------------------------------------------------------
        /// <summary>
        /// 현재 남은 점프 횟수입니다.
        /// </summary>
        // ------------------------------------------------------------
        public int Count { get; set; }

        // ------------------------------------------------------------
        /// <summary>
        /// 코요테 점프 지속 시간입니다.
        /// </summary>
        // ------------------------------------------------------------
        public float CoyoteJumpDuration { get; set; }

        // ------------------------------------------------------------
        /// <summary>
        /// 점프 버퍼 지속 시간입니다.
        /// </summary>
        // ------------------------------------------------------------
        public float JumpBufferDuration { get; set; }

    #endregion

        #region 이벤트

        // ------------------------------------------------------------
        /// <summary>
        /// 점프가 시작될 때 호출되는 이벤트입니다.
        /// </summary>
        // ------------------------------------------------------------
        public event Action<IJumper, JumpEventArgs> OnJump;

    #endregion

    #region 메서드

        // ------------------------------------------------------------
        /// <summary>
        /// 점프를 실행하도록 트리거합니다.
        /// </summary>
        // ------------------------------------------------------------
        public void Trigger();

        // ------------------------------------------------------------
        /// <summary>
        /// 업데이트를 진행합니다.
        /// </summary>
        // ------------------------------------------------------------
        public void FixedUpdate();

        // ------------------------------------------------------------
        /// <summary>
        /// 업데이트를 진행합니다.
        /// </summary>
        // ------------------------------------------------------------
        public void FixedUpdate(float fixedDeltaTime);

        // ------------------------------------------------------------
        /// <summary>
        /// 점프 카운트를 초기화합니다.
        /// </summary>
        // ------------------------------------------------------------
        public void Reset();

    #endregion
    
    }
}