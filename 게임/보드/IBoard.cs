using System;

namespace inonego
{
    // ============================================================
    /// <summary>
    /// 보드의 공간을 나타낸 인터페이스입니다.
    /// </summary>
    // ============================================================
    public interface IBoardSpace<TPlaceable>
    where TPlaceable : class, new()
    {
        //------------------------------------------------------------
        /// <summary>
        /// 공간에 있는 객체를 반환합니다.
        /// </summary>
        //------------------------------------------------------------
        public TPlaceable Placed { get; }

        //------------------------------------------------------------
        /// <summary>
        /// 공간이 차있는지 확인합니다.
        /// </summary>
        //------------------------------------------------------------
        public bool IsFull { get; }
    }

    // ============================================================
    /// <summary>
    /// 보드를 나타내는 인터페이스입니다.
    /// </summary>
    // ============================================================
    public interface IBoard<TPoint, TBoardSpace, TPlaceable>
    where TPoint : struct
    where TBoardSpace : class, IBoardSpace<TPlaceable>, new()
    where TPlaceable : class, new()
    {
        //------------------------------------------------------------
        /// <summary>
        /// 지정된 좌표에 있는 공간을 반환합니다.
        /// </summary>
        //------------------------------------------------------------
        public TBoardSpace this[TPoint point] { get; }

        //------------------------------------------------------------
        /// <summary>
        /// 지정된 객체가 있는 좌표를 반환합니다.
        /// </summary>
        //------------------------------------------------------------
        public TPoint? this[TPlaceable placeable] { get; }

        //------------------------------------------------------------
        /// <summary>
        /// 모든 공간이 차있는지 확인합니다.
        /// </summary>
        //------------------------------------------------------------
        public bool IsAllSpaceFull { get; }
    }
}